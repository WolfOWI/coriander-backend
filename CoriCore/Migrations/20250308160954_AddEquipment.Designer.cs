// <auto-generated />
using System;
using CoriCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoriCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250308160954_AddEquipment")]
    partial class AddEquipment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoriCore.Models.Admin", b =>
                {
                    b.Property<int>("adminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("adminId"));

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("adminId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("CoriCore.Models.Employee", b =>
                {
                    b.Property<int>("employeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("employeeId"));

                    b.Property<DateOnly>("dateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("employDate")
                        .HasColumnType("date");

                    b.Property<int>("employType")
                        .HasColumnType("integer");

                    b.Property<int>("gender")
                        .HasColumnType("integer");

                    b.Property<bool>("isSuspended")
                        .HasColumnType("boolean");

                    b.Property<string>("jobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("lastPayDayIsPaid")
                        .HasColumnType("boolean");

                    b.Property<DateOnly?>("lastPayday")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("nextPayday")
                        .HasColumnType("date");

                    b.Property<int>("payCycleId")
                        .HasColumnType("integer");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("salary")
                        .HasColumnType("numeric");

                    b.Property<DateOnly?>("suspensionEndDate")
                        .HasColumnType("date");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("employeeId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CoriCore.Models.Equipment", b =>
                {
                    b.Property<int>("equipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("equipmentId"));

                    b.Property<DateTime>("assignedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("condition")
                        .HasColumnType("integer");

                    b.Property<int>("employeeId")
                        .HasColumnType("integer");

                    b.Property<int>("equipmentCatId")
                        .HasColumnType("integer");

                    b.HasKey("equipmentId");

                    b.HasIndex("employeeId");

                    b.HasIndex("equipmentCatId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("CoriCore.Models.EquipmentCategory", b =>
                {
                    b.Property<int>("equipmentCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("equipmentCatId"));

                    b.Property<string>("equipmentCatName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("equipmentCatId");

                    b.ToTable("EquipmentCategories");
                });

            modelBuilder.Entity("CoriCore.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userId"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("googleId")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("profilePicture")
                        .HasColumnType("text");

                    b.Property<int>("role")
                        .HasColumnType("integer");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CoriCore.Models.Admin", b =>
                {
                    b.HasOne("CoriCore.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("CoriCore.Models.Admin", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoriCore.Models.Employee", b =>
                {
                    b.HasOne("CoriCore.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("CoriCore.Models.Employee", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoriCore.Models.Equipment", b =>
                {
                    b.HasOne("CoriCore.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoriCore.Models.EquipmentCategory", "EquipmentCategory")
                        .WithMany()
                        .HasForeignKey("equipmentCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EquipmentCategory");
                });

            modelBuilder.Entity("CoriCore.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
